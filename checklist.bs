<pre class='metadata'>
Title: PACT Conformance Testing Checklist
Shortname: pact-conf-test-checklist
Level: 2
Status: LD
URL: https://wbcsd.github.io/pact-conformance-testing/checklist
Mailing List: pact@wbcsd.org
Editor: Prasad Tilloo (SINE Foundation), https://sine.foundation, prasad@sine.foundation
Editor: Raimundo Henriques (SINE Foundation), https://sine.foundation, raimundo@sine.foundation
Repository: wbcsd/pact-conformance-testing/
Abstract: Checklist for conformance testing within the PACT ecosystem.
Markup Shorthands: markdown yes
Markup Shorthands: biblio yes
Boilerplate: omit conformance, omit copyright
</pre>

# Introduction # {#background}

Conformance testing is a necessary process to ensure interoperability between independent implementations of the [[!DXP|PACT Technical Specifications]].

This guidance document supports manual [[!CONNECTATHONS|conformance testing processes]] by defining [=required test case|required=] and [=conditional test cases=] that can be executed by a [=testing party=] against the [=target host system=].
The test cases are designed to verify the functionality of a [=target host system=] against the [[!DXP|PACT Technical Specifications]].

Advisement: This document does not replace the technical specifications. It is possible that there are deviations between this document and the technical specifications. These cases are unintended. This document also does not superseed or otherwise have normative value over the technical specifications.


# Terminology # {#terminology}

: <dfn>Required Test Case</dfn>
:: Test case relating to MANDATORY functionality
: <dfn>Conditional Test Case</dfn>
:: Test cases relating to OPTIONAL functionality.
: <dfn>Host System</dfn>
:: see [[DXP#host-system]]
: <dfn>testing party</dfn>
:: The party witnessing and perforing the tests. Typically, the tester is a data recipient
: <dfn>Target Host System</dfn>
:: The [=host system=] under test. 


# Scope of the Test Cases # {#scope}

The test cases cover the following functionality defined by the PACT Technical Specifications: 

- All actions are offered under the `https` method only (i.e., `http` requests are not processed)
- The endpoint `/auth/token` is exposed (even if a custom `AuthEndpoint` is used for authentication)
- The host system supports the following actions:
    - [Action Authenticate](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth)
    - [Action ListFootprints](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list),
        including pagination and support for the `limit` parameter
    - [Action GetFootprint](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-get)
- If the host system does not support [Action
    Events](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events), it responds to
    authenticated Action Events calls with an [error
    response](https://wbcsd.github.io/tr/data-exchange-protocol/#error-response) with code
    [NotImplemented](https://wbcsd.github.io/tr/data-exchange-protocol/#notimplemented)


There are also test cases covering conditional or optional functionality: 
- filtering of the `ListFootprints` action (see [[DXP#api-action-list-filtering]])
- OpenID Connect-based authentication flow: (see [[DXP#api-auth]])
- Action Events (see [[DXP#api-action-events]])

Note: Support for Action Events will become mandatory in v2.2 of the Technical Specifications.


# Testing Preparation # {#preparation}

Prior to all tests, the owner of the [=target host system=] must provide the [=testing party=] with 
1. credentials that the testing party for successful authentication (i.e., a `client_id` and a `client_secret`)
2. the authentication hostname and path (see [[DXP#authhostname]])
3. hostname and path used for implementing the different HTTP Actions (see [[DXP#hostname]])


# Test Cases for PACT Conformance Testing # {#test-cases}

## Required Test Cases ## {#required-tests}

### Test Case 001: Authenticate against `/auth/token` ### {#tc001}

Tests the target host system's ability to authenticate a requesting data recipient through
the default endpoint `/auth/token`.

#### Request #### {#tc001-request}

An authentication POST request must be sent to the `auth/token` endpoint of the test target host
system with **correct credentials** the syntax specified in [section 6.5.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-request) (the
credentials need not be correct).

From v2.1 onwards, host systems can also use a custom `AuthEndpoint` for authentication, specified
in an OpenId Provider Configuration Document.

#### Expected Response #### {#tc001-response}

Depending on whether authentication through `/auth/token` is supported, the test target host system
must respond with either

- 200 OK and a JSON body containing the access token, as specified in [section 6.5.2 of the Technical
    Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-response), or

- 400 Bad Request and a JSON body containing an error, as specified in [section 6.5.2 of the
    Technical
    Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-response). In
    this case, the testing party must execute the test case [[#tc012]].

### Test Case 002: Attempt Authentication with Invalid credentials against `/auth/token` ### {#tc002}

Tests the target host system's ability to reject an authentication request with invalid
credentials through the default endpoint `/auth/token`.

#### Request #### {#tc002-request}

An authentication POST request must be sent to the `AuthEndpoint` of the test target host system with
**incorrect credentials** and the syntax specified in [section 6.5.1 of the Technical Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-request)

#### Expected Response #### {#tc002-response}

Depending on whether authentication through `/auth/token` is supported, the test target host system
must respond with either

- 400 Bad Request and a JSON body containing the error `"invalid_client"`, as specified in [section
    6.5.2 of the Technical
    Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-response), or

- 400 Bad Request and a JSON body containing an error, as specified in [section 6.5.2 of the
    Technical
    Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-response). In
    this case, the testing party must execute the test case [[#tc013]].

### Test Case 003: Get All Footprints ### {#tc003}

Tests the target host system's ability to list all available PCFs.

#### Request #### {#tc003-request}

A ListFootPrints GET request must be sent to the `/2/footprints` endpoint of the test target host
system with a **valid access token** and the syntax specified in [section 6.6.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request).

No `limit` or `filter` paramenters should be defined for this test.

#### Expected Response #### {#tc003-response}

The test target host system must respond with 200 OK and a JSON body containing the list of all
available PCFs, as specified in [section 6.6.4 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-response).

### Test Case 004: Get Limited List of Footrpints ### {#tc004}

Tests the target host system's ability to list a limited number of PCFs when the `limit` parameter
is set by the data recipient.

#### Request #### {#tc004-request}

A ListFootPrints GET request must be sent to the `/2/footprints` endpoint of the test target host
system with the **limit** parameter, a **valid access token** and the syntax specified in [section
6.6.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request).

#### Expected Response #### {#tc004-response}

The test target host system must respond with either 200 OK or 202 Accepted and a JSON body
containing a list of PCFs with a length equal to or smaller than the limit set in the request, as
specified in [section 6.6.4 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-response).

Unless the total number of available PCFs is equal to or smaller than the limit set in the request,
the test target host system must return a `Link` header as specified in [section 6.6.2 of the
Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-pagination).

Note: For testing purposes it is recommended to set the limit to a small number (e.g., 2) to ensure
that pagination is tested.

### Test Case 005: Get Next Page of Footprints ### {#tc005}

Note: This test pressuposes the completion of [[#tc004]] and uses the `link` returned in the header.
If [[#tc004]] fails, this test should be skipped.

Tests the target host system's ability to return the next page of PCFs when the `link` returned in
the header of the response to a ListFootPrints call with the `limit` parameter. The target host
system must return the same page as many times as the `link` is called.  This test must be performed
within 180 seconds of that call.

#### Request #### {#tc005-request}

A ListFootPrints GET request must be sent to the URL specified in the `link` of the response header
obtained through [[#tc004]] with a **valid access token** and the syntax specified in [section 6.6.3
of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request).

After the first response, the test must be repeated to ensure that the same page is returned.

#### Expected Response #### {#tc005-response}

The test target host system must respond with either 200 OK or 202 Accepted and a JSON body
containing the next page of PCFs. If this page is the last, the header must not contain a `link` and
the response must be 200 OK.

This response must take place twice, one per each call to the next page `link`.

### Test Case 006: Attempt ListFootprints with Expired Token ### {#tc006}

Tests the target host system's ability to reject a ListFootprints request with an expired access
token with the correct error response.

#### Request #### {#tc006-request}

A ListFootprints GET request must be sent to the `/2/footprints` endpoint of the test target host
system with an **expired access token** and the syntax specified in [section 6.6.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request).

#### Expected Response #### {#tc006-response}

The test target host system must respond with a 401 Unnauthorized and a JSON body that should contain the
error response `TokenExpired`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

Note: Since the access token is expired, re-authentication should in principle solve the issue. By
returning the HTTP error code 401 (instead of, e.g., 403), the host system signals that
re-authentication should be attempted.

### Test Case 007: Attempt ListFootPrints with Invalid Token ### {#tc007}

Tests the target host system's ability to reject a ListFootprints request with an invalid access
token with the correct error response.

#### Request #### {#tc007-request}

A ListFootprints GET request must be sent to the `/2/footprints` endpoint of the test target host system
with an **invalid access token** and the syntax specified in [section 6.6.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request).

#### Expected Response #### {#tc007-response}

The test target host system must respond with a 403 Forbidden and a JSON body containing the
error response `AccessDenied`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

Note: Since the access token is invalid, re-authentication cannot solve the issue. By returning the
HTTP error code 403 (instead of, e.g., 401), the host system signals that there is no gain in
re-authenticating.

### Test Case 008: Get Footprint ### {#tc008}

Tests the target host system's ability to return a PCF with a specific `pfId`. This `pfId` must
correspond to one of the PCFs returned by the ListFootprints action.

#### Request #### {#tc008-request}

A GetFootprint GET request must be sent to the `/2/footprints/{GetPfId}` endpoint of the test target
host system with a **valid access token** and the syntax specified in [section 6.7.1 of the
Technical Specifications]
(https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-get-request).

#### Expected Response #### {#tc008-response}

The test target host system must respond with 200 OK and a JSON body containing the PCF with the
requested `pfId`, as specified in [section 6.7.2 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-get-response).

### Test Case 009: Attempt GetFootprint with Expired Token ### {#tc009}

Tests the target host system's ability to reject a GetFootprint request with an expired access token
with the correct error response.

#### Request #### {#tc009-request}

A GetFootprint GET request must be sent to the `/2/footprints/{GetPfId}` endpoint of the test target
host system with an **expired access token** and the syntax specified in [section 6.7.1 of the
Technical Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-get-request).

#### Expected Response #### {#tc009-response}

The test target host system must respond with a 401 Unnauthorized and a JSON body that should contain the
error response `TokenExpired`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

Note: Since the access token is expired, re-authentication should in principle solve the issue. By
returning the HTTP error code 401 (instead of, e.g., 403), the host system signals that
re-authentication should be attempted.

### Test Case 010: Attempt GetFootprint with Invalid Token ### {#tc010}

#### Request #### {#tc010-request}

A GetFootprint GET request must be sent to the `/2/footprints/{GetPfId}` endpoint of the test target
host system with an **invalid access token** and the syntax specified in [section 6.7.1 of the
Technical Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-get-request).

#### Expected Response #### {#tc010-response}

The test target host system must respond with a 403 Forbidden and a JSON body containing the error
response `AccessDenied`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

Note: Since the access token is invalid, re-authentication cannot solve the issue. By
returning the HTTP error code 403 (instead of, e.g., 401), the host system signals that
there is no gain in re-authenticating.

## Conditional Test Cases ## {#conditional-tests}

### Test Case 011: Authenticate against Custom `AuthEndpoint`### {#tc011}

Tests the target host system's ability to authenticate a requesting data recipient through
a custom `AuthEndpoint`.

#### Request #### {#tc011-request}

An athentication POST request must be sent to the `AuthEndpoint` of the test target host system with
**correct credentials** and the syntax specified in [section 6.5.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-request)

#### Expected Response #### {#tc011-response}

The test target host system must respond with 200 OK and a JSON body containing the access token, as
specified in [section 6.5.2 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-response).

### Test Case 012: Attempt Authentication with Invalid Credentials against Custom `AuthEndpoint`  ### {#tc012}

#### Request #### {#tc012-request}

An authentication POST request must be sent to the `AuthEndpoint` of the test target host system with
**incorrect credentials** and the syntax specified in [section 6.5.1 of the Technical Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-request)

#### Expected Response #### {#tc012-response}

The test target host system must respond with a 400 Bad Request and a JSON body containing the error
`"invalid_client"`, as specified in [section 6.5.2 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-response).

### Test Case 013: Attempt Authentication through HTTP (non-HTTPS) ### {#tc013}

According to [section 6.4 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-requirements), a host system
must offer its actions under https method only.

#### Request #### {#t013-request}

An http-only equivalent of the test target host system `AuthEndpoint` (be it `/auth/token` or a
custom endpoint) must be generated, replacing "https://" by "http://".

An authentication POST request must be sent to the generated http endpoint with the the syntax specified
in [section 6.5.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-auth-request) (the
credentials need not be correct).

#### Expected Response #### {#t013-response}

No response is expected: the request must not be processed.

### Test Case 014: Attempt ListFootprints through HTTP (non-HTTPS) ### {#tc014}

According to [section 6.4 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-requirements), a host system
must offer its actions under https method only.

#### Request #### {#tc014-request}

An http-only equivalent of the test target host system ListFootprints endpoint must be generated,
replacing "https://" by "http://".

A ListFootprints GET request must be sent to the generated http endpoint with the the syntax
specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request) (the
access token need not be valid).

#### Expected Response #### {#tc014-response}

No response is expected: the request must not be processed.

### Test Case 015: Get Previous Page of Footprints ### {#tc015}

Note: This test pressuposes the completion of [[#tc004]] and {#test-listfootprints-next}. If any of
these fail, this test should be skipped.

According to [section 6.6.2 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-pagination), a
pagination link might no longer work after a new page is requested.

This test presupposes that the test target host system has enough PCFs available to allow for their
division into three pages.

#### Request #### {#tc015-request}

After requesting the second page of footprints through {#test-listfootprints-next}, a ListFootprints
GET request must be sent to the URL specified in the `link` of the response header (assuming there
is one) with a **valid access token** and the syntax specified in [section 6.6.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request). At that
point, the third page of PCFs should be returned.

The URL specified in the `link` of the response header of the second page must be stored. A
ListFootprints GET request must be sent to this URL with a **valid access token** and the syntax
specified in [section 6.6.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request).

#### Expected Response #### {#tc015-response}

The test target host system may respond with either
- 200 OK or 202 Accepted and a JSON body containing the corresponding page of PCFs, or
- an error http status code and a JSON body containing an error response.

### Test Case 016: Get Filtered List of Footprints ### {#tc016}

Support for filtering is optional and, when supported, it can be processed in a best-effort basis,
as specified in [section 6.6.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-filtering).

#### Request #### {#tc016-request}

A ListFootPrints GET request must be sent to the `/2/footprints` endpoint of the test target host
system with the **filter** parameter, a **valid access token** and the syntax specified in [section
6.6.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-list-request).

#### Expected Response #### {#tc016-response}

The test target host system should respond with 200 OK and a JSON body containing a list of PCFs
matching the filtering criteria.

### Test Case 017: Attempt GetFootprint with Non-Existent PfId ### {#tc017}

Tests the target host system's ability to reject a GetFootprint request with a non-existent `pfId`
with the correct error response.

#### Request #### {#tc017-request}

A GetFootprint GET request must be sent to the `/2/footprints/{GetPfId}` endpoint of the test target
host system, where `{GetPfId}` is a **non-existent** `pfId`, with a **valid access token** and the
syntax specified in [section 6.7.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-get-request).

#### Expected Response #### {#tc017-response}

The test target host system should respond with a 404 Not Found and a JSON body
containing the error code `NoSuchFootprint`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

### Test Case 018: Attempt GetFootprint through HTTP (non-HTTPS) ### {#tc018}

According to [section 6.4 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-requirements), a host system
must offer its actions under https method only.

Therefore, it is our understanding that host systems must not expose any action-related endpoints
through http (non-https).

#### Request #### {#tc018-request}

An http-only equivalent of the test target host system GetFootprint endpoint must be generated,
replacing "https://" by "http://".

A GetFootprint GET request must be sent to the generated http endpoint with the the syntax specified
in [section 6.7.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-get-request) (the
GetPfId need not exist).

#### Expected Response #### {#tc018-response}

No response is expected: the request must not be processed.

### Test Case 019: Receive Notification of PCF Update ### {#tc019}

Advisement: This test case will become mandatory in v2.2 of the Technical Specifications.

Tests the target host system's ability to be notified of a PCF update.

#### Request #### {#tc019-request}

A POST request must be sent to the test target host system's `/2/events` endpoint with the syntax
specified in [section 6.8.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events-case-1).

#### Expected Response #### {#tc019-response}

The test target host system must respond with 200 OK and an empty body.

If the test target host system calls the GetFootprint action with the `pfId` included in the
notification, the corresponding PCF must be returned.

### Test Case 020: Notify of PCF Update ### {#tc020}

Advisement: This test case will become mandatory in v2.2 of the Technical Specifications.

Tests the target host system's ability to notify a data recipient of a PCF update.

Note: For this test case, the data owner is the test target host system and the data recipient is
the testing party. Accordingly, the latter must be conformant with [section 6.8 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events) and behave in
accordance if the functionality is not implemented.

#### Request #### {#tc020-request}

The test target host system must authenticate with the testing party (performing the customary
[Authentication Flow](https://wbcsd.github.io/tr/data-exchange-protocol/#api-auth)) and obtain an
access token.

The test target host system must send a POST request to the testing party's `/2/events` endpoint
with a valid access token and the syntax specified in [section 6.8.3 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events-case-1).

#### Expected Response #### {#tc020-response}

If the testing party has implemented the Events functionality, it should respond with 200 OK and an empty body.

Otherwise, it should respond with 400 Bad Request and a JSON body containing the error response
`NotImplemented`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

### Test Case 021: Asynchronous PCF Request ### {#tc021}

Advisement: This test case will become mandatory in v2.2 of the Technical Specifications.

Tests the target host system's ability to receive an asynchronous PCF request.

#### Request #### {#tc021-request}

A POST request must be sent to the test target host system's `/2/events` endpoint with the syntax
specified in [section 6.8.4.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events-case-2-request).

#### Expected Response #### {#tc021-response}

The test target host system must respond with 200 OK.

### Test Case 022: Respond to Asynchronous PCF Request ### {#tc022}

Advisement: This test case will become mandatory in v2.2 of the Technical Specifications.

Tests the target host system's ability to respond to an asynchronous PCF request.

Note: For this test case, the data owner is the test target host system and the data recipient is
the testing party. Accordingly, the latter must be conformant with [section 6.8 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events) and behave in
accordance if the functionality is not implemented. This test pressuposes the completion of
[[#tc022]] and should be skipped if it failed.

#### Request #### {#tc022-request}

The test target host system must authenticate with the testing party (performing the customary
[Authentication Flow](https://wbcsd.github.io/tr/data-exchange-protocol/#api-auth)) and obtain an
access token.

The test target host system must send a POST request to the testing party's `/2/events` endpoint
with a valid access token and the syntax specified in [section 6.8.4.2 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events-case-2-response).

#### Expected Response #### {#tc022-response}

If the testing party has implemented the Events functionality, it should respond with 200 OK and an empty body.

Otherwise, it should respond with 400 Bad Request and a JSON body containing the error response
`NotImplemented`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

### Test Case 023: Attempt Action Events with Expired Token ### {#tc023}

Tests the target host system's ability to reject an Events request with an expired access token with
the correct error response.

#### Request #### {#tc023-request}

An Events POST request must be sent to the `/2/events` endpoint of the test target host
system with an **expired access token** and the syntax specified in [section 6.8.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events-request) (the
EnventBody is irrelevant).

#### Expected Response #### {#tc023-response}

The test target host system must respond with a 401 Unnauthorized and a JSON body that should
contain the error response `TokenExpired`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

Note: Since the access token is expired, re-authentication should in principle solve the issue. By
returning the HTTP error code 401 (instead of, e.g., 403), the host system signals that
re-authentication should be attempted.

### Test Case 024: Attempt Action Events with Invalid Token ### {#tc024}

Tests the target host system's ability to reject an Events request with an invalid access token with
the correct error response.

#### Request #### {#tc024-request}

An Events POST request must be sent to the `/2/events` endpoint of the test target host
system with an **invalid access token** and the syntax specified in [section 6.8.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events-request) (the
EnventBody is irrelevant).

Note: Since the access token is invalid, re-authentication cannot solve the issue. By returning the
HTTP error code 403 (instead of, e.g., 401), the host system signals that there is no gain in
re-authenticating.

#### Expected Response #### {#tc024-response}

The test target host system must respond with a 403 Forbidden and a JSON body containing the
error response `AccessDenied`, as specified in [section 6.9 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-error-responses).

Note: Since the access token is invalid, re-authentication cannot solve the issue. By returning the
HTTP error code 403 (instead of, e.g., 401), the host system signals that there is no gain in
re-authenticating.

### Test Case 025: Attempt Action Events through HTTP (non-HTTPS) ### {#tc025}

According to [section 6.4 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-requirements), a host system
must offer its actions under https method only.

Therefore, it is our understanding that host systems must not expose any action-related endpoints
through http (non-https).

#### Request #### {#tc025-request}

An http-only equivalent of the test target host system Events endpoint must be generated,
replacing "https://" by "http://".

An Events POST request must be sent to the generated http endpoint with the the syntax specified in
[section 6.8.1 of the Technical
Specifications](https://wbcsd.github.io/tr/data-exchange-protocol/#api-action-events-request) (the
access token and EnventBody are irrelevant).

#### Expected Response #### {#tc025-response}

No response is expected: the request must not be processed.


<pre class=biblio>
 {
    "DXP": {
      "authors": [
        "Martin Pompéry",
        "Cecilia Valeri"
      ],
      "publisher": "WBCSD",
      "status": "LD",
      "title": "PACT Tech Specs V2.2",
      "href": "https://wbcsd.github.io/data-exchange-protocol/v2/"
    },
    "CONNECTATHONS": {
        "authors": [
            "Prasad Tilloo",
            "Raimundo Henriques"
        ],
        "publisher": "WBCSD",
        "status": "LD",
        "title": "PACT Conformance Testing",
        "href": "https://wbcsd.github.io/pact-conformance-testing/"
    }
  }
</pre>